(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{255:function(e,t,n){"use strict";n.r(t);var r=n(37),o=Object(r.a)({},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"intro"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#intro","aria-hidden":"true"}},[e._v("#")]),e._v(" Intro")]),e._v(" "),n("p",[e._v("Bundling is an indispensable part of building modern Javascript app. Webpack, Rollup, Parcel-bunder are some of the big name bundlers. For the most part, bundling has been a magical process: just give the bundler the entry, the output, add some other config, and "),n("em",[e._v("POOF")]),e._v("! - suddenly your bundle.js is ready.")]),e._v(" "),n("p",[n("img",{attrs:{src:"https://thepracticaldev.s3.amazonaws.com/i/6pkw4boytmpzuki9wq31.gif",alt:"magic"}})]),e._v(" "),n("p",[e._v("In this post, I will explain what a bundler is and why it is a good thing to use one - we will do it by creating one from scratch.")]),e._v(" "),n("h1",{attrs:{id:"what-a-bundler-is-and-why-we-need-it"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#what-a-bundler-is-and-why-we-need-it","aria-hidden":"true"}},[e._v("#")]),e._v(" What a bundler is and why we need it")]),e._v(" "),n("blockquote",[n("p",[e._v("A bundler is a tool that puts your entry code along with all its dependencies together in one JS file.")])]),e._v(" "),n("p",[e._v("Why would we want to use it? Can't we just upload the entire files and directories of our project and not go through extra step?")]),e._v(" "),n("p",[e._v("Here are two reasons:")]),e._v(" "),n("ol",[n("li",[e._v("Javascript initially had no standard/ built-in module system. "),n("code",[e._v("import")]),e._v(" and "),n("code",[e._v("export")]),e._v(" syntax is a recent convention in ES6. "),n("a",{attrs:{href:"https://caniuse.com/#feat=es6-module",target:"_blank",rel:"noopener noreferrer"}},[e._v("Not all browser supports it yet"),n("OutboundLink")],1),e._v(".")]),e._v(" "),n("li",[e._v("It is better to put everything together in one bundled file. Imagine a project where we have 5 different JS files. The client will have to make "),n("strong",[e._v("5 requests")]),e._v(" to your server (or CDN, or both - btw, it is "),n("a",{attrs:{href:"https://stackoverflow.com/questions/7445909/bundling-js-files-vs-cdn",target:"_blank",rel:"noopener noreferrer"}},[e._v("even better"),n("OutboundLink")],1),e._v(" to bundle them and put them in CDN.) - but that is still 4 extra requests that client could have avoided if our project was bundled up in one JS file (client will only have to make one request). "),n("em",[e._v("More requests = more overhead")]),e._v(".")])]),e._v(" "),n("p",[e._v("I hope these are enough reasons to want to use a bundler. Let's move on to understanding how a bundler works")]),e._v(" "),n("p",[e._v("Best way to understand how something works is to build/ tinker it.")]),e._v(" "),n("h1",{attrs:{id:"building-bundler"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#building-bundler","aria-hidden":"true"}},[e._v("#")]),e._v(" Building bundler")]),e._v(" "),n("p",[e._v("Before we start, let's go through the basic of what our project will look like.")]),e._v(" "),n("p",[n("img",{attrs:{src:"https://thepracticaldev.s3.amazonaws.com/i/t0tm22z42vxz0iskdgje.png",alt:"bandler logo"}})]),e._v(" "),n("p",[e._v("Introducing "),n("a",{attrs:{href:"https://github.com/iggredible/bandler",target:"_blank",rel:"noopener noreferrer"}},[e._v("Bandler"),n("OutboundLink")],1),e._v(". The tiniest, cutest, awesomest bundler you have ever seen (ok, you can name it whatever. That's just what I named my bundler).")]),e._v(" "),n("p",[e._v("Bandler will have a structure like this:")]),e._v(" "),n("p",[n("code",[e._v("entry.js")]),e._v(" -> "),n("code",[e._v("module1.js")]),e._v(" -> "),n("code",[e._v("module2.js")])]),e._v(" "),n("p",[e._v("The entry will be called "),n("code",[e._v("entry.js")]),e._v(". It will have one dependency, "),n("code",[e._v("module1.js")]),e._v(", which has a dependency, "),n("code",[e._v("module2.js")]),e._v(".")]),e._v(" "),n("p",[e._v("Our project will use "),n("a",{attrs:{href:"https://alligator.io/js/modules-es6/",target:"_blank",rel:"noopener noreferrer"}},[e._v("ES6 module syntax"),n("OutboundLink")],1),e._v("("),n("code",[e._v("import")]),e._v("/"),n("code",[e._v("export")]),e._v("). Our task is to extend the module support to older browser. We have to transpile the ES6 syntax into something all/ most browsers can understand.")]),e._v(" "),n("p",[e._v("Here are 8 steps how should do it:")]),e._v(" "),n("ol",[n("li",[e._v("Read content of "),n("code",[e._v("entry.js")])]),e._v(" "),n("li",[e._v("Parse that content and make a "),n("strong",[e._v("list")]),e._v(" of all "),n("code",[e._v("import")]),e._v(" declarations")]),e._v(" "),n("li",[e._v("Transpile the content from step 1 from ES6 to ES5")]),e._v(" "),n("li",[e._v("Assign each dependency file with unique ID to be referenced later (for example, if we use "),n("code",[e._v("import module1 from './module1.js'")]),e._v(" in entry, "),n("code",[e._v("./module1.js")]),e._v(" is a dependency and we will map this with a unique ID)")]),e._v(" "),n("li",[e._v("Put all of the info from steps 2-4 in one object")]),e._v(" "),n("li",[e._v("Create a 'dependency graph' (by iterating through all dependencies,  all dependencies of each dependency, and so on; repeat steps 1-5)")]),e._v(" "),n("li",[e._v("Pack everything in step 6 together")]),e._v(" "),n("li",[e._v("Celebrate because our bundler is done! ðŸŽŠðŸ™Œ")])]),e._v(" "),n("p",[e._v("If it looks complicated, don't worry, because it is not.")]),e._v(" "),n("h2",{attrs:{id:"starting-project"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#starting-project","aria-hidden":"true"}},[e._v("#")]),e._v(" Starting Project")]),e._v(" "),n("p",[e._v("In this section we'll do the setup: start a new directory for our project, "),n("code",[e._v("cd")]),e._v(" into it, and install some libraries.")]),e._v(" "),n("p",[n("code",[e._v("mkdir bundler-playground && cd $_")])]),e._v(" "),n("p",[e._v("Start npm project.")]),e._v(" "),n("p",[n("code",[e._v("npm init -y")])]),e._v(" "),n("p",[e._v("Install some additional libraries:")]),e._v(" "),n("ol",[n("li",[n("code",[e._v("@babel/parser")]),e._v(" to parse our code and returns an AST object")]),e._v(" "),n("li",[n("code",[e._v("@babel/traverse")]),e._v(" to traverse/ walk through our AST object; this will help us look for all import declarations")]),e._v(" "),n("li",[n("code",[e._v("@babel/core")]),e._v(" to transpile ES6 -> ES5")]),e._v(" "),n("li",[n("code",[e._v("resolve")]),e._v(" to get full path of each dependency (ex: turn "),n("code",[e._v("./module1.js")]),e._v(" into something like "),n("code",[e._v("/User/iggy/project/bundler-playground/module1.js")]),e._v(")")])]),e._v(" "),n("p",[n("code",[e._v("npm install --save @babel/parser @babel/traverse @babel/core resolve")])]),e._v(" "),n("p",[e._v("Create a new "),n("code",[e._v("index.js")]),e._v(" in root, and add import these guys:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v(' const fs = require("fs");\n const path = require("path");\n const parser = require("@babel/parser");\n const traverse = require("@babel/traverse").default;\n const babel = require("@babel/core"); \n const resolve = require("resolve").sync;\n')])])]),n("h2",{attrs:{id:"get-module-info"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#get-module-info","aria-hidden":"true"}},[e._v("#")]),e._v(" Get module info")]),e._v(" "),n("p",[e._v("In this section, we will:")]),e._v(" "),n("ol",[n("li",[e._v("Assign a particular "),n("code",[e._v("filePath")]),e._v(" with unique ID (to be referenced later)")]),e._v(" "),n("li",[e._v("Get all dependencies used by this file (list all "),n("code",[e._v("import")]),e._v("s used)")]),e._v(" "),n("li",[e._v("Transpile ES code")])]),e._v(" "),n("p",[e._v("Here is the code for this section.")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('let ID = 0;\n\nfunction createModuleInfo(filePath) {\n  const content = fs.readFileSync(filePath, "utf-8");\n  const ast = parser.parse(content, {\n    sourceType: "module"\n  });\n  const deps = [];\n  traverse(ast, {\n    ImportDeclaration: ({ node }) => {\n      deps.push(node.source.value);\n    }\n  });\n  const id = ID++;\n  const { code } = babel.transformFromAstSync(ast, null, {\n    presets: ["@babel/preset-env"]\n  });\n\n  return {\n    id,\n    filePath,\n    deps,\n    code\n  };\n}\n')])])]),n("p",[e._v("We got the file content using "),n("a",{attrs:{href:"https://nodejs.org/api/fs.html#fs_fs_readfilesync_path_options",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("readFileSync()")]),n("OutboundLink")],1),e._v(". Then we parsed the content to get "),n("a",{attrs:{href:"https://stackoverflow.com/questions/16127985/what-is-javascript-ast-how-to-play-with-it",target:"_blank",rel:"noopener noreferrer"}},[e._v("AST"),n("OutboundLink")],1),e._v(" information. Once AST is acquired, we traversed the AST and look for all import instances using "),n("a",{attrs:{href:"https://github.com/babel/babel/blob/master/packages/babel-parser/ast/spec.md#importdeclaration",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("ImportDeclaration")]),n("OutboundLink")],1),e._v(" API. Lastly, we transpiled our code from ES6 using babel core's "),n("a",{attrs:{href:"https://babeljs.io/docs/en/babel-core#transformfromastsync",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("transformFromAstSync")]),n("OutboundLink")],1),e._v(".")]),e._v(" "),n("p",[e._v("For ID, we used a simple incrementing number (it's better to use random GUID, since it is a demo, "),n("code",[e._v("ID++")]),e._v(" will do)")]),e._v(" "),n("p",[e._v("With this, we have ourselves a nifty module information consisting of a unique ID, list of all dependencies (all imports), and the code inside that module. Next, we iterate the process for all relevant modules to create a dependency graph.")]),e._v(" "),n("h2",{attrs:{id:"creating-dependency-graph"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#creating-dependency-graph","aria-hidden":"true"}},[e._v("#")]),e._v(" Creating Dependency Graph")]),e._v(" "),n("p",[e._v("Dependency graph is a collection of interrelated modules used in our app, starting from entry point.")]),e._v(" "),n("p",[e._v("Here is a code for this section.")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("function createDependencyGraph(entry) {\n  const entryInfo = createModuleInfo(entry);\n  const graphArr = [];\n  graphArr.push(entryInfo);\n  for (const module of graphArr) {\n    module.map = {};\n    module.deps.forEach(depPath => {\n      const baseDir = path.dirname(module.filePath);\n      const moduleDepPath = resolve(depPath, { baseDir });\n      const moduleInfo = createModuleInfo(moduleDepPath);\n      graphArr.push(moduleInfo);\n      module.map[depPath] = moduleInfo.id;\n    });\n  }\n  return graphArr;\n}\n")])])]),n("p",[e._v("We will be using an array type for our dependency graph. We start by pushing our entry info first.")]),e._v(" "),n("p",[e._v("Then we iterate through dependency graph elements (starting with entry).")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const baseDir = path.dirname(module.filePath);\nconst moduleDepPath = resolve(depPath, { baseDir });\nconst moduleInfo = createModuleInfo(moduleDepPath);\ngraphArr.push(moduleInfo);\n")])])]),n("p",[e._v("Here we use "),n("code",[e._v("path.dirname")]),e._v(" and "),n("code",[e._v("resolve")]),e._v(" to get full path of each module, get the info using the full path, and push that info into our dependency graph array.")]),e._v(" "),n("p",[e._v("Note these lines:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("module.map = {};\n...\nmodule.map[depPath] = moduleInfo.id;\n")])])]),n("p",[e._v("Here we add an additional attribute "),n("code",[e._v("map")]),e._v(" inside our "),n("code",[e._v("moduleInfo")]),e._v(" object. This attribute will be used on next step as a "),n("em",[e._v("lookup")]),e._v(" to map each module with unique identifier. For example:")]),e._v(" "),n("table",[n("thead",[n("tr",[n("th",[e._v("module")]),e._v(" "),n("th",[e._v("ID")])])]),e._v(" "),n("tbody",[n("tr",[n("td",[e._v("entry.js")]),e._v(" "),n("td",[e._v("0")])]),e._v(" "),n("tr",[n("td",[e._v("module1.js")]),e._v(" "),n("td",[e._v("1")])]),e._v(" "),n("tr",[n("td",[e._v("module2.js")]),e._v(" "),n("td",[e._v("2")])]),e._v(" "),n("tr",[n("td",[e._v("etc")]),e._v(" "),n("td",[e._v("n")])])])]),e._v(" "),n("p",[e._v("In the end, we end up with an array of module infos of all dependency used in the entire project.")]),e._v(" "),n("h2",{attrs:{id:"packing-them-all-together"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#packing-them-all-together","aria-hidden":"true"}},[e._v("#")]),e._v(" Packing them all together")]),e._v(" "),n("p",[e._v("Now that we have dependency graph, the last step is to "),n("strong",[e._v("pack")]),e._v(" them together.")]),e._v(" "),n("p",[n("img",{attrs:{src:"https://thepracticaldev.s3.amazonaws.com/i/0rz8w9epr6il0ie6rea4.gif",alt:"mickey packing"}})]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("function pack(graph) {\n  const moduleArgArr = graph.map(module => {\n    return `${module.id}: {\n      factory: (exports, require) => {\n        ${module.code}\n      },\n      map: ${JSON.stringify(module.map)}\n    }`;\n  });\n  const iifeBundler = `(function(modules){\n    const require = id => {\n      const {factory, map} = modules[id];\n      const localRequire = requireDeclarationName => require(map[requireDeclarationName]); \n      const module = {exports: {}};\n      factory(module.exports, localRequire); \n      return module.exports; \n    } \n    require(0);\n  })({${moduleArgArr.join()}})\n  `;\n  return iifeBundler;\n}\n")])])]),n("p",[e._v("First, we create a factory pattern over the code of each module. It pass an "),n("code",[e._v("export")]),e._v(" and "),n("code",[e._v("require")]),e._v(". Keep these 2 arguments in mind. We are keeping the map from previous step.")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("return `${module.id}: {\n  factory: (exports, require) => {\n    ${module.code}\n  },\n  map: ${JSON.stringify(module.map)}\n  }`;\n")])])]),n("p",[e._v("Second, we created an IIFE to run the entire dependency graphs together. The next part might be confusing - I struggled to understand this part initially, but with patience, it will make sense!")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("  const iifeBundler = `(function(modules){\n    const require = id => {\n      const {factory, map} = modules[id];\n      const localRequire = requireDeclarationName => require(map[requireDeclarationName]); \n      const module = {exports: {}};\n      factory(module.exports, localRequire); \n      return module.exports; \n    } \n    require(0);\n  })({${moduleArgArr.join()}})\n  `;\n")])])]),n("ol",[n("li",[e._v("We are using IIFE pattern to scope the variables so they do not affect global variables")]),e._v(" "),n("li",[e._v("The dependency graph we created earlier section is being passed as the argument ("),n("code",[e._v("${moduleArgArr.join()}")]),e._v(")")]),e._v(" "),n("li",[e._v("That dependency graph is being passed inside IIFE as "),n("code",[e._v("modules")])]),e._v(" "),n("li",[e._v("We created a "),n("code",[e._v("require(id)")]),e._v(" function. This function has two effects:")])]),e._v(" "),n("ul",[n("li",[e._v("It recursively calls its own with the ID of other dependencies via "),n("code",[e._v("require(map[requireDeclarationName])")]),e._v(". This translates to something like "),n("code",[e._v("require(1)")]),e._v(" - recalling the mapping function earlier, turns into "),n("code",[e._v("require('./module1.js')")])]),e._v(" "),n("li",[e._v("It executes the actual code from step 1 (createModuleInfo) step when it runs "),n("code",[e._v("factory(module.exports, localRequire)")])]),e._v(" "),n("li",[e._v("This function returns "),n("code",[e._v("module.exports")]),e._v(" - although it is initially empty ("),n("code",[e._v("{exports: {}}")]),e._v("), after running "),n("code",[e._v("factory()")]),e._v(", the value of this "),n("code",[e._v("module.exports")]),e._v(" is the "),n("code",[e._v("exports")]),e._v(" value inside "),n("code",[e._v("factory")]),e._v(" we created earlier (think about it)")])]),e._v(" "),n("h2",{attrs:{id:"code-repo"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#code-repo","aria-hidden":"true"}},[e._v("#")]),e._v(" Code Repo")]),e._v(" "),n("p",[e._v("The final code for this blog can be found "),n("a",{attrs:{href:"https://github.com/iggredible/bandler/tree/ce43fa000b16931e9518e94506a81b381eed764b",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),n("OutboundLink")],1),e._v(" to compare code.")]),e._v(" "),n("p",[e._v("The full code will look something like this:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('const fs = require("fs");\nconst path = require("path");\nconst parser = require("@babel/parser"); // parses and returns AST\nconst traverse = require("@babel/traverse").default; // AST walker\nconst babel = require("@babel/core"); // main babel functionality\nconst resolve = require("resolve").sync; // get full path to dependencies\n\nlet ID = 0;\n\n/*\n * Given filePath, return module information\n * Module information includes:\n * module ID\n * module filePath\n * all dependencies used in the module (in array form)\n * code inside the module\n */\nfunction createModuleInfo(filePath) {\n  const content = fs.readFileSync(filePath, "utf-8");\n  const ast = parser.parse(content, {\n    sourceType: "module"\n  });\n  const deps = [];\n  traverse(ast, {\n    ImportDeclaration: ({ node }) => {\n      deps.push(node.source.value);\n    }\n  });\n  const id = ID++;\n  const { code } = babel.transformFromAstSync(ast, null, {\n    presets: ["@babel/preset-env"]\n  });\n\n  return {\n    id,\n    filePath,\n    deps,\n    code\n  };\n}\n\n/*\n * Given entry path,\n * returns an array containing information from each module\n */\nfunction createDependencyGraph(entry) {\n  const entryInfo = createModuleInfo(entry);\n  const graphArr = [];\n  graphArr.push(entryInfo);\n  for (const module of graphArr) {\n    module.map = {};\n    module.deps.forEach(depPath => {\n      const baseDir = path.dirname(module.filePath);\n      const moduleDepPath = resolve(depPath, { baseDir });\n      const moduleInfo = createModuleInfo(moduleDepPath);\n      graphArr.push(moduleInfo);\n      module.map[depPath] = moduleInfo.id;\n    });\n  }\n  return graphArr;\n}\n\n/*\n * Given an array containing information from each module\n * return a bundled code to run the modules\n */\nfunction pack(graph) {\n  const moduleArgArr = graph.map(module => {\n    return `${module.id}: {\n      factory: (exports, require) => {\n        ${module.code}\n      },\n      map: ${JSON.stringify(module.map)}\n    }`;\n  });\n  const iifeBundler = `(function(modules){\n    const require = id => {\n      const {factory, map} = modules[id];\n      const localRequire = requireDeclarationName => require(map[requireDeclarationName]); \n      const module = {exports: {}};\n\n      factory(module.exports, localRequire); \n      return module.exports; \n    } \n    require(0);\n  })({${moduleArgArr.join()}})\n  `;\n  return iifeBundler;\n}\n\nconsole.log("***** Copy code below and paste into browser *****");\n\n/* create dependency graph */\nconst graph = createDependencyGraph("./entry.js"); // wherever your entry is\n/* create bundle based on dependency graph */\nconst bundle = pack(graph);\n\nconsole.log(bundle);\nconsole.log("***** Copy code above and paste into browser *****");\n\n')])])]),n("p",[e._v("If we run "),n("code",[e._v("node ./index.js")]),e._v(", we'll get something like")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('(function(modules){\n    const require = id => {\n      const {factory, map} = modules[id];\n      const localRequire = requireDeclarationName => require(map[requireDeclarationName]);\n      const module = {exports: {}};\n\n      factory(module.exports, localRequire);\n      return module.exports;\n    }\n    require(0);\n  })({0: {\n      factory: (exports, require) => {\n        "use strict";\n\nvar _module = _interopRequireDefault(require("./module1.js"));\n\nvar _module2 = _interopRequireDefault(require("./module2.js"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }\n\n(0, _module["default"])();\n(0, _module2["default"])();\n      },\n      map: {"./module1.js":1,"./module2.js":2}\n    },1: {\n      factory: (exports, require) => {\n        "use strict";\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports["default"] = void 0;\n\nvar _module = _interopRequireDefault(require("./module2.js"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }\n\nvar module1 = function module1() {\n  (0, _module["default"])();\n  console.log("hello from module1!");\n};\n\nvar _default = module1;\nexports["default"] = _default;\n      },\n      map: {"./module2.js":3}\n    },2: {\n      factory: (exports, require) => {\n        "use strict";\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports["default"] = void 0;\n\nvar module2 = function module2() {\n  console.log("Hello from module2!");\n};\n\nvar _default = module2;\nexports["default"] = _default;\n      },\n      map: {}\n    },3: {\n      factory: (exports, require) => {\n        "use strict";\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports["default"] = void 0;\n\nvar module2 = function module2() {\n  console.log("Hello from module2!");\n};\n\nvar _default = module2;\nexports["default"] = _default;\n      },\n      map: {}\n    }})(function(modules){\n    const require = id => {\n      const {factory, map} = modules[id];\n      const localRequire = requireDeclarationName => require(map[requireDeclarationName]);\n      const module = {exports: {}};\n\n      factory(module.exports, localRequire);\n      return module.exports;\n    }\n    require(0);\n  })({0: {\n      factory: (exports, require) => {\n        "use strict";\n\nvar _module = _interopRequireDefault(require("./module1.js"));\n\nvar _module2 = _interopRequireDefault(require("./module2.js"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }\n\n(0, _module["default"])();\n(0, _module2["default"])();\n      },\n      map: {"./module1.js":1,"./module2.js":2}\n    },1: {\n      factory: (exports, require) => {\n        "use strict";\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports["default"] = void 0;\n\nvar _module = _interopRequireDefault(require("./module2.js"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }\n\nvar module1 = function module1() {\n  (0, _module["default"])();\n  console.log("hello from module1!");\n};\n\nvar _default = module1;\nexports["default"] = _default;\n      },\n      map: {"./module2.js":3}\n    },2: {\n      factory: (exports, require) => {\n        "use strict";\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports["default"] = void 0;\n\nvar module2 = function module2() {\n  console.log("Hello from module2!");\n};\n\nvar _default = module2;\nexports["default"] = _default;\n      },\n      map: {}\n    },3: {\n      factory: (exports, require) => {\n        "use strict";\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports["default"] = void 0;\n\nvar module2 = function module2() {\n  console.log("Hello from module2!");\n};\n\nvar _default = module2;\nexports["default"] = _default;\n      },\n      map: {}\n    }})\n')])])]),n("p",[e._v("Copy/Paste that into browser and you'll see")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("Hello from module2!\nhello from module1!\nHello from module2!\n")])])]),n("p",[e._v("Congratulations! We have just built an entire bundler... from scratch!!")]),e._v(" "),n("p",[n("img",{attrs:{src:"https://thepracticaldev.s3.amazonaws.com/i/ppozpb2ciyp2ciitsih7.gif",alt:"traveling with giant luggage"}})]),e._v(" "),n("h2",{attrs:{id:"bonus"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#bonus","aria-hidden":"true"}},[e._v("#")]),e._v(" Bonus")]),e._v(" "),n("p",[e._v("In addition to creating an ES6 bundler, I attempted to create a bundler that bundles either CJS and ES6, "),n("a",{attrs:{href:"https://github.com/iggredible/bandler",target:"_blank",rel:"noopener noreferrer"}},[e._v("Bandler"),n("OutboundLink")],1),e._v(" ("),n("a",{attrs:{href:"https://www.npmjs.com/package/bandler",target:"_blank",rel:"noopener noreferrer"}},[e._v("NPM"),n("OutboundLink")],1),e._v(")")]),e._v(" "),n("p",[e._v("I won't go too deep here - but in addition to using babel parser and babel traverse, I used "),n("a",{attrs:{href:"https://www.npmjs.com/package/detective",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("detective")]),n("OutboundLink")],1),e._v(" library that specifically searches and lists all CJS requires (ex: "),n("code",[e._v("require('./your/lib.js')")]),e._v(") instances from a project. I saw that Babel does not have CJS syntax declaration "),n("a",{attrs:{href:"https://github.com/babel/babel/blob/master/packages/babel-parser/ast/spec.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),n("OutboundLink")],1),e._v(".")]),e._v(" "),n("p",[e._v("Can you think of some other ways to make CJS and ES6 bundler?")]),e._v(" "),n("h2",{attrs:{id:"resources-links-etc"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#resources-links-etc","aria-hidden":"true"}},[e._v("#")]),e._v(" Resources, links, etc")]),e._v(" "),n("p",[e._v("Popular bundlers")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"http://browserify.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("browserify"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://webpack.js.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("webpack"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://rollupjs.org/guide/en/",target:"_blank",rel:"noopener noreferrer"}},[e._v("rollup"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/parcel-bundler/parcel",target:"_blank",rel:"noopener noreferrer"}},[e._v("parcel-bundler"),n("OutboundLink")],1)])]),e._v(" "),n("p",[e._v("Inspirations for this post")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://github.com/ronami/minipack/blob/master/src/minipack.js",target:"_blank",rel:"noopener noreferrer"}},[e._v("minipack"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/adamisntdead/wbpck-bundler",target:"_blank",rel:"noopener noreferrer"}},[e._v("wbpck-bundler"),n("OutboundLink")],1)])]),e._v(" "),n("p",[e._v("Readings on bundlers")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://medium.com/@gimenete/how-javascript-bundlers-work-1fc0d0caf2da",target:"_blank",rel:"noopener noreferrer"}},[e._v("bundler overview"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://www.freecodecamp.org/news/anatomy-of-js-module-systems-and-building-libraries-fadcd8dbd0e/",target:"_blank",rel:"noopener noreferrer"}},[e._v("create your own bundler"),n("OutboundLink")],1),e._v(" - creator of wbpck-bundler mentioned above")]),e._v(" "),n("li",[n("a",{attrs:{href:"https://dev.to/kayis/4-javascript-bundlers-2g4b",target:"_blank",rel:"noopener noreferrer"}},[e._v("small list of popular js bundlers"),n("OutboundLink")],1)]),e._v(" "),n("li",[e._v("(Yet another) "),n("a",{attrs:{href:"https://survivejs.com/webpack/appendices/comparison/",target:"_blank",rel:"noopener noreferrer"}},[e._v("list of build tools"),n("OutboundLink")],1)])])])},[],!1,null,null,null);t.default=o.exports}}]);