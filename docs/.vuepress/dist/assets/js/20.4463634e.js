(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{253:function(e,t,r){"use strict";r.r(t);var s=r(37),a=Object(s.a)({},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("p",[e._v("In vim, we can paste ("),r("code",[e._v("p")]),e._v("/"),r("code",[e._v("P")]),e._v(") after deleting ("),r("code",[e._v("d{something}")]),e._v(") or yanking ("),r("code",[e._v("y{something}")]),e._v("). Pasting uses Vim registers. However, do you know that there are 10 different registers in Vim? Check out `:h registers.")]),e._v(" "),r("p",[r("em",[e._v("I am using "),r("a",{attrs:{href:"https://neovim.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("neovim"),r("OutboundLink")],1),e._v(" v0.3.4. Some of these might be different if you use regular vim, but the gist should be the same and most people should be able to follow along.")])]),e._v(" "),r("p",[e._v("In this article I will go over 3 of them because I believe these are the more useful ones (plus it's easier to learn 3 things than 10 things in one sitting). In the future, I will cover more of these registers.")]),e._v(" "),r("h1",{attrs:{id:"the-ten-types-of-register"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#the-ten-types-of-register","aria-hidden":"true"}},[e._v("#")]),e._v(" The ten types of register")]),e._v(" "),r("p",[e._v("According to Vim, these are the 10 registers. The three we will cover here are shown in bold.")]),e._v(" "),r("p",[r("img",{attrs:{src:"https://media.giphy.com/media/27qP1RcoyDi1v9kRYZ/giphy.gif",alt:"boldone"}})]),e._v(" "),r("ol",[r("li",[r("strong",[e._v('The unnamed register ""')])]),e._v(" "),r("li",[r("strong",[e._v('10 numbered registers "0 to "9')])]),e._v(" "),r("li",[e._v('The small delete register "-')]),e._v(" "),r("li",[r("strong",[e._v('26 named registers "a to "z or "A to "Z')])]),e._v(" "),r("li",[e._v('three read-only registers ":, "., "%')]),e._v(" "),r("li",[e._v('alternate buffer register "#')]),e._v(" "),r("li",[e._v('the expression register "=')]),e._v(" "),r("li",[e._v('The selection registers "* and "+')]),e._v(" "),r("li",[e._v('The black hole register "_')]),e._v(" "),r("li",[e._v('Last search pattern register "/')])]),e._v(" "),r("h1",{attrs:{id:"some-useful-operators-to-know-before-we-start"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#some-useful-operators-to-know-before-we-start","aria-hidden":"true"}},[e._v("#")]),e._v(" Some useful operators to know before we start")]),e._v(" "),r("p",[e._v("Some operators saves the values to registers:")]),e._v(" "),r("p",[r("code",[e._v("s, x, y{something}, c{something}, d{something}")])]),e._v(" "),r("p",[e._v('I use the mnemonic "sexy cd" - excuse my language ðŸ˜³ - to remember them.')]),e._v(" "),r("h1",{attrs:{id:"register-1-unnamed-registers"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#register-1-unnamed-registers","aria-hidden":"true"}},[e._v("#")]),e._v(' Register 1: Unnamed registers ("")')]),e._v(" "),r("p",[e._v("We use them all the time. When we yank/change/delete anything we are storing them to the unnamed register ("),r("code",[e._v('""')]),e._v(").")]),e._v(" "),r("p",[e._v("We can use unnamed register by "),r("code",[e._v("p")]),e._v(" or "),r("code",[e._v('""p')]),e._v(".")]),e._v(" "),r("p",[e._v("If we do another yank/change/delete, it will replace the previous unnamed register. It is like your computer's standard copy/paste.")]),e._v(" "),r("h1",{attrs:{id:"register-2-numbered-register-0-9"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#register-2-numbered-register-0-9","aria-hidden":"true"}},[e._v("#")]),e._v(" Register 2: Numbered Register (0-9)")]),e._v(" "),r("p",[e._v("There are 2 different numbered registers: register 0 (yank register) and registers 1-9 (numbered register)")]),e._v(" "),r("h2",{attrs:{id:"register-2a-yank-register-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#register-2a-yank-register-0","aria-hidden":"true"}},[e._v("#")]),e._v(" Register 2a: Yank register (0)")]),e._v(" "),r("p",[e._v("When you yank something (say you just yanked an entire line "),r("code",[e._v("yy")]),e._v("), it gets saved in "),r("strong",[e._v("two")]),e._v(" places:")]),e._v(" "),r("ol",[r("li",[e._v("unnamed register (you can "),r("code",[e._v("p")]),e._v(" after you "),r("code",[e._v("yy")]),e._v(")")]),e._v(" "),r("li",[e._v("yank register ("),r("code",[e._v('"0p')]),e._v(")")])]),e._v(" "),r("p",[e._v("Yank register only gets replaced when you yank something else second time. It "),r("strong",[e._v("won't")]),e._v(" get replaced if you run s/x/c/d.")]),e._v(" "),r("p",[e._v("Yank register also won't fill out numbered registers 1-9.")]),e._v(" "),r("p",[e._v("This is useful when we yank an important line, that yanked line is always available even after we perform several deletions so you can call it anytime.")]),e._v(" "),r("h2",{attrs:{id:"register-2b-numbered-register-1-9"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#register-2b-numbered-register-1-9","aria-hidden":"true"}},[e._v("#")]),e._v(" Register 2b: Numbered Register (1-9)")]),e._v(" "),r("p",[e._v("Numbered registers store the latest 9 deletions/ changes (s/x/c/d) automatically.")]),e._v(" "),r("p",[e._v("Let's try it. Copy/paste the following: w")]),e._v(" "),r("ol",[r("li",[e._v("one")]),e._v(" "),r("li",[e._v("two")]),e._v(" "),r("li",[e._v("three")]),e._v(" "),r("li",[e._v("four")]),e._v(" "),r("li",[e._v("five // cursor here")])]),e._v(" "),r("p",[e._v('With the cursor on the last line ("5. five"), let\'s do 5 '),r("code",[e._v("dd")]),e._v(".")]),e._v(" "),r("p",[e._v("Cool. 1-5 should be gone and saved to registers 1-5. If we want to paste three, we can just do "),r("code",[e._v('"3p')]),e._v(" (read: get value from register 3 and paste it)")]),e._v(" "),r("p",[r("em",[e._v("Note that this register stores deleted/ changed texts "),r("strong",[e._v("at least one line or larger")]),e._v(". So deleting a line ("),r("code",[e._v("dd")]),e._v(") gets stored in numbered register but deleting a word ("),r("code",[e._v("diw")]),e._v(" or "),r("code",[e._v("de")]),e._v(") won't. Anything smaller gets stored in small delete ("),r("code",[e._v("-")]),e._v(") register")])]),e._v(" "),r("h2",{attrs:{id:"register-3-named-register-a-z-a-z"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#register-3-named-register-a-z-a-z","aria-hidden":"true"}},[e._v("#")]),e._v(" Register 3: Named register (a-z, A-Z)")]),e._v(" "),r("p",[e._v("Named register allows us to save our deleted/ changed/ yanked texts into register a through z. You can do it by "),r("code",[e._v('"{letter} {delete/yank/change action}')]),e._v(".")]),e._v(" "),r("p",[e._v("For example, if I want to delete the entire line and save that into register "),r("code",[e._v("a")]),e._v(", I can do "),r("code",[e._v('"add')]),e._v(" (read: save to register a all deleted line).")]),e._v(" "),r("p",[e._v("To get that value back, we can do "),r("code",[e._v('"ap')]),e._v(" (read: get value from register a and paste it).")]),e._v(" "),r("p",[e._v("If we want to append to existing register, we do "),r("code",[e._v('"{uppercase letter} {delete/yank/change action}')]),e._v(". The key is to use the uppercase letter of the letter we want to append. So to add into our register a, we can do "),r("code",[e._v('"Add')]),e._v(" and use "),r("code",[e._v('"ap')]),e._v(" to get the value back.")]),e._v(" "),r("h1",{attrs:{id:"conclusions"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#conclusions","aria-hidden":"true"}},[e._v("#")]),e._v(" Conclusions")]),e._v(" "),r("p",[e._v("We have just learned 3 Vim registers. I find that I used these 3 more than anything else. Start using them into your daily workflow today. I personally find yank registers and named registers very useful.")]),e._v(" "),r("p",[e._v("That's all folks. Vim till you win!")])])},[],!1,null,null,null);t.default=a.exports}}]);